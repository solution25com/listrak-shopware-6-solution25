const g=`<div> <sw-button-process :is-loading="isLoading" :process-success="isSaveSuccessful" @process-finish="saveFinish" @click="check" > {{ $tc('dataApiTest.buttonLabel') }} </sw-button-process> </div>`,{Component:w,Mixin:b}=Shopware;w.register("data-api-test",{template:g,props:["label"],inject:["dataApiTest"],mixins:[b.getByName("notification")],data(){return{isLoading:!1,isSaveSuccessful:!1}},computed:{pluginConfig(){let e=this.$parent;for(;e.actualConfigData===void 0;)e=e.$parent;const i=e.currentSalesChannelId;return e.actualConfigData[i]||e.actualConfigData.null}},methods:{saveFinish(){this.isSaveSuccessful=!1},check(){this.isLoading=!0,this.dataApiTest.check(this.pluginConfig).then(()=>{this.isSaveSuccessful=!0,this.createNotificationSuccess({title:this.$tc("dataApiTest.title"),message:this.$tc("dataApiTest.success")})}).catch(()=>{this.createNotificationError({title:this.$tc("dataApiTest.title"),message:this.$tc("dataApiTest.error")})}).finally(()=>{this.isLoading=!1})}}});const I=`<div> <sw-button-process :is-loading="isLoading" :process-success="isSaveSuccessful" @process-finish="saveFinish" @click="check" > {{ $tc('emailApiTest.buttonLabel') }} </sw-button-process> </div>`,{Component:A,Mixin:E}=Shopware;A.register("email-api-test",{template:I,props:["label"],inject:["emailApiTest"],mixins:[E.getByName("notification")],data(){return{isLoading:!1,isSaveSuccessful:!1}},computed:{pluginConfig(){let e=this.$parent;for(;e.actualConfigData===void 0;)e=e.$parent;const i=e.currentSalesChannelId;return e.actualConfigData[i]||e.actualConfigData.null}},methods:{saveFinish(){this.isSaveSuccessful=!1},check(){this.isLoading=!0,this.emailApiTest.check(this.pluginConfig).then(()=>{this.isSaveSuccessful=!0,this.createNotificationSuccess({title:this.$tc("emailApiTest.title"),message:this.$tc("emailApiTest.success")})}).catch(()=>{this.createNotificationError({title:this.$tc("emailApiTest.title"),message:this.$tc("emailApiTest.error")})}).finally(()=>{this.isLoading=!1})}}});const d=Object.freeze({LISTRAK_MAIL_SEND:"action.listrak.mail.send"}),v="general",{Component:S}=Shopware;S.override("sw-flow-sequence-action",{computed:{modalName(){return this.selectedAction===d.LISTRAK_MAIL_SEND?"sw-flow-listrak-mail-send-modal":this.$super("modalName")},actionDescription(){return{...this.$super("actionDescription"),[d.LISTRAK_MAIL_SEND]:i=>this.getListrakMailSendActionDescription(i)}}},methods:{getListrakMailSendActionDescription(e){const i=e.recipient.type;return this.$tc(`Recipient: ${i.charAt(0).toUpperCase()+i.slice(1)}`)},getActionTitle(e){return e===d.LISTRAK_MAIL_SEND?{value:e,icon:"regular-envelope",label:this.$tc("listrakMailSendAction.titleSendMail"),group:v}:this.$super("getActionTitle",e)}}});const{types:N}=Shopware.Utils;function _(e,i){return i instanceof RegExp?i.test(e):new RegExp(i).test(e)}function p(e){return _(e,/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z-0-9]+\.)+[a-zA-Z]{2,}))$/)}const k=`{% block sw_flow_listrak_mail_send_modal %} <sw-modal class="sw-flow-listrak-mail-send-modal" :title="$tc('listrakMailSendAction.titleSendMail')" :closable="false" @modal-close="onClose" > {% block sw_flow_mail_send_modal_recipient %} <sw-single-select v-model:value="mailRecipient" name="sw-field--mailRecipient" class="sw-flow-listrak-mail-send-modal__recipient" :options="recipientOptions" :label="$tc('sw-flow.modals.mail.labelRecipient')" :placeholder="$tc('sw-flow.modals.mail.placeholderRecipient')" @update:value="onChangeRecipient" /> {% endblock %} {% block sw_flow_mail_send_modal_recipient_emails_grid %} <sw-data-grid v-if="showRecipientEmails" ref="recipientsGrid" class="sw-flow-listrak-mail-send-modal__recipient-grid" :class="recipientGridError ? 'has--error' : ''" :data-source="recipients" :columns="recipientColumns" :show-selection="false" :plain-appearance="true" @inline-edit-save="saveRecipient" @inline-edit-cancel="cancelSaveRecipient" > {% block sw_event_action_detail_recipients_grid_column_email %} <template #column-email="{ item, column, isInlineEdit, compact }"> <sw-text-field v-if="isInlineEdit" v-model:value="item.email" name="sw-field--item-email" class="sw-flow-listrak-mail-send-modal__recipient-email" :size="compact ? 'small' : 'default'" :error="item.errorMail" :placeholder="$tc('sw-flow.modals.mail.placeholderRecipientEmailAddress')" /> <template v-else> {{ item.email }} </template> </template> {% endblock %} {% block sw_event_action_detail_recipients_grid_column_name %} <template #column-name="{ item, column, isInlineEdit, compact }"> <sw-text-field v-if="isInlineEdit" v-model:value="item.name" name="sw-field--item-name" class="sw-flow-listrak-mail-send-modal__recipient-name" :size="compact ? 'small' : 'default'" :error="item.errorName" :placeholder="$tc('sw-flow.modals.mail.placeholderRecipientName')" /> <template v-else> {{ item.name }} </template> </template> {% endblock %} <template #actions="{ item, itemIndex }"> {% block sw_event_action_detail_recipients_grid_action_edit %} <sw-context-menu-item class="sw-flow-listrak-mail-send-modal__grid-action-edit" @click="onEditRecipient(item)" > {{ $tc('global.default.edit') }} </sw-context-menu-item> {% endblock %} {% block sw_event_action_detail_recipients_grid_action_delete %} <sw-context-menu-item class="sw-flow-listrak-mail-send-modal__grid-action-delete" variant="danger" :disabled="!allowDeleteRecipient(itemIndex)" @click="onDeleteRecipient(itemIndex)" > {{ $tc('global.default.delete') }} </sw-context-menu-item> {% endblock %} </template> </sw-data-grid> {% endblock %} {% block sw_flow_mail_send_modal_custom %} {% endblock %} {% block sw_flow_mail_send_modal_custom_modal %} <sw-number-field class="sw-flow-listrak-mail-send-modal__transactional-message-id" v-model:value="transactionalMessageId" :label="$tc('listrakMailSendAction.transactionalMessageIdLabel')" :help-text="$tc('listrakMailSendAction.transactionalMessageIdHelpText')" :error="transactionalMessageIdError" placeholder="11379312" /> <sw-data-grid ref="profileFieldsGrid" class="sw-flow-listrak-mail-send-modal__profile-fields-grid" :class="profileFieldsGridError ? 'has--error' : ''" :data-source="profileFields" :columns="profileFieldsColumns" :show-selection="false" :plain-appearance="true" @inline-edit-save="saveProfileField" @inline-edit-cancel="cancelSaveProfileField" > <template #column-field-id="{ item, column, isInlineEdit, compact }"> <sw-number-field v-if="isInlineEdit" v-model:value="item.fieldId" class="sw-flow-listrak-mail-send-modal__profile-field-id" :size="compact ? 'small' : 'default'" :error="item.errorId" placeholder="1205" /> <template v-else> {{ item.fieldId }} </template> </template> <template #column-field-value="{ item, column, isInlineEdit, compact }"> {% if context.feature.isActive('v6.7.0.0') %} <mt-textarea v-if="isInlineEdit" v-model="item.fieldValue" class="listrak-fixed-grid-textarea" :size="compact ? 'small' : 'default'" :error="item.errorValue" :title="item.fieldValue" placeholder="{{ customer.firstName }}" /> {% else %} <sw-textarea-field v-if="isInlineEdit" v-model:value="item.fieldValue" class="listrak-fixed-grid-textarea" :size="compact ? 'small' : 'default'" :error="item.errorValue" :title="item.fieldValue" placeholder="{{ customer.firstName }}" /> {% endif %} <template v-else> {{ item.fieldValue.length > 25 ? item.fieldValue.slice(0, 25) + 'â€¦' : item.fieldValue }} </template> </template> <template #actions="{ item, itemIndex }"> <sw-context-menu-item class="sw-flow-listrak-mail-send-modal__grid-action-edit" @click="onEditProfileField(item)" > {{ $tc('global.default.edit') }} </sw-context-menu-item> <sw-context-menu-item class="sw-flow-listrak-mail-send-modal__grid-action-delete" variant="danger" :disabled="!allowDeleteProfileField(itemIndex)" @click="onDeleteProfileField(itemIndex)" > {{ $tc('global.default.delete') }} </sw-context-menu-item> </template> </sw-data-grid> {% endblock %} {% block sw_flow_mail_send_modal_footer %} <template #modal-footer> {% block sw_flow_mail_send_modal_footer_cancel_button %} <sw-button class="sw-flow-listrak-mail-send-modal__cancel-button" size="small" @click="onClose" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_flow_mail_send_modal_footer_save_button %} <sw-button class="sw-flow-listrak-mail-send-modal__save-button" variant="primary" size="small" @click="onAddAction" > {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Component:h,Utils:s,Classes:{ShopwareError:a}}=Shopware,{mapState:m}=h.getComponentHelper();h.register("sw-flow-listrak-mail-send-modal",{template:k,inject:["repositoryFactory"],emits:["modal-close","process-finish"],props:{sequence:{type:Object,required:!0}},data(){return{showRecipientEmails:!1,mailRecipient:null,recipients:[],selectedRecipient:null,selectedProfileField:null,recipientGridError:null,transactionalMessageId:null,profileFields:[],profileFieldsGridError:null,transactionalMessageIdError:null}},computed:{isNewMail(){var e;return!((e=this.sequence)!=null&&e.id)},recipientCustomer(){return[{value:"default",label:this.$tc("listrakMailSendAction.labelCustomer")}]},recipientAdmin(){return[{value:"admin",label:this.$tc("listrakMailSendAction.labelAdmin")}]},recipientCustom(){return[{value:"custom",label:this.$tc("listrakMailSendAction.labelCustom")}]},recipientDefault(){return[{value:"default",label:this.$tc("listrakMailSendAction.labelDefault")}]},recipientContactFormMail(){return[{value:"contactFormMail",label:this.$tc("listrakMailSendAction.labelContactFormMail")}]},entityAware(){return["CustomerAware","UserAware","OrderAware","CustomerGroupAware","CartAware"]},recipientOptions(){const e=this.triggerEvent.aware??[],i=[];return e.forEach(l=>{l=l.slice(l.lastIndexOf("\\")+1);const n=l.charAt(0).toUpperCase()+l.slice(1);i.includes(n)||i.push(n)}),i.length===0?this.recipientCustom:this.triggerEvent.name==="contact_form.send"?[...this.recipientDefault,...this.recipientContactFormMail,...this.recipientAdmin,...this.recipientCustom]:["newsletter.confirm","newsletter.register","newsletter.unsubscribe"].includes(this.triggerEvent.name)?[...this.recipientCustomer,...this.recipientAdmin,...this.recipientCustom]:i.some(l=>this.entityAware.includes(l))?[...this.recipientCustomer,...this.recipientAdmin,...this.recipientCustom]:[...this.recipientAdmin,...this.recipientCustom]},recipientColumns(){return[{property:"email",label:"listrakMailSendAction.columnRecipientMail",inlineEdit:"string"},{property:"name",label:"listrakMailSendAction.columnRecipientName",inlineEdit:"string"}]},profileFieldsColumns(){return[{property:"field-id",label:"listrakMailSendAction.columnProfileFieldId",inlineEdit:"number"},{property:"field-value",label:"listrakMailSendAction.columnProfileFieldValue",inlineEdit:"string"}]},replyToOptions(){return this.triggerEvent.name==="contact_form.send"?[...this.recipientDefault,...this.recipientContactFormMail,...this.recipientCustom]:[...this.recipientDefault,...this.recipientCustom]},...Shopware.Feature.isActive("v6.7.0.0")?m(()=>Shopware.Store.get("swFlow"),["mailTemplates","triggerEvent","triggerActions"]):m("swFlowState",["mailTemplates","triggerEvent","triggerActions"])},created(){this.createdComponent()},methods:{createdComponent(){var e,i,t,l;if(this.transactionalMessageId=((i=(e=this.sequence)==null?void 0:e.config)==null?void 0:i.transactionalMessageId)||null,this.mailRecipient=this.recipientOptions[0].value,!this.isNewMail){const{config:n}=this.sequence;this.mailRecipient=(t=n.recipient)==null?void 0:t.type,((l=n.recipient)==null?void 0:l.type)==="custom"&&(Object.entries(n.recipient.data).forEach(([r,o])=>{const c=s.createId();this.recipients.push({id:c,email:r,name:o,isNew:!1})}),this.addRecipient(),this.showRecipientEmails=!0),n!=null&&n.profileFields&&Object.entries(n.profileFields).forEach(([r,o])=>{const c=s.createId();this.profileFields.push({id:c,fieldId:r,fieldValue:o,isNew:!1})})}this.addProfileField()},onClose(){this.$emit("modal-close")},getRecipientData(){const e={};return this.mailRecipient!=="custom"||this.recipients.forEach(i=>{!i.email&&!i.name||Object.assign(e,{[i.email]:i.name})}),e},getProfileFieldsData(){const e={};return this.profileFields.forEach(i=>{!i.fieldId&&!i.fieldValue||Object.assign(e,{[i.fieldId]:i.fieldValue})}),e},isTransactionalMessageIdError(){return this.transactionalMessageId?/^\d+$/.test(this.transactionalMessageId)?!1:(this.transactionalMessageIdError=new a({code:"INVALID_TRANSACTIONAL_MESSAGE_ID",detail:this.$tc("listrakMailSendAction.transactionalMessageIdValueInvalid")}),!0):(this.transactionalMessageIdError=new a({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"}),!0)},isRecipientGridError(){if(this.mailRecipient!=="custom")return!1;if(this.recipients.length===1&&!this.recipients[0].email&&!this.recipients[0].name)return this.validateRecipient(this.recipients[0],0),!0;const e=this.recipients.filter(i=>!i.isNew).findIndex(i=>!i.name||!i.email||!p(i.email));return e>=0&&this.validateRecipient(this.recipients[e],e),e>=0},isProfileFieldsGridError(){if(this.profileFields.length===1&&!this.profileFields[0].fieldId&&!this.profileFields[0].fieldValue)return this.profileFields=[],!1;const e=this.profileFields.filter(i=>!i.isNew).findIndex(i=>!i.fieldId||!i.fieldValue);return e>=0&&this.validateProfileField(this.profileFields[e],e),e>=0},onAddAction(){this.recipientGridError=this.isRecipientGridError(),this.profileFieldsGridError=this.isProfileFieldsGridError();const e=this.isTransactionalMessageIdError();if(this.profileFieldsGridError||this.recipientGridError||e)return;this.resetError();const i={...this.sequence,config:{transactionalMessageId:this.transactionalMessageId,recipient:{type:this.mailRecipient,data:this.getRecipientData()},profileFields:this.getProfileFieldsData()}};this.$nextTick(()=>{this.$emit("process-finish",i)})},onChangeRecipient(e){e==="custom"?(this.showRecipientEmails=!0,this.addRecipient()):this.showRecipientEmails=!1},addRecipient(){const e=s.createId();this.recipients.push({id:e,email:"",name:"",isNew:!0}),this.$nextTick().then(()=>{setTimeout(()=>{const i=this.$refs.recipientsGrid;i&&(i.currentInlineEditId=e,i.enableInlineEdit())},100)})},addProfileField(){const e=s.createId();this.profileFields.push({id:e,fieldId:"",fieldValue:"",isNew:!0}),this.$nextTick().then(()=>{setTimeout(()=>{const i=this.$refs.profileFieldsGrid;i&&(i.startInlineEdit=e,i.enableInlineEdit())},100)})},saveRecipient(e){const i=this.recipients.findIndex(t=>t.id===e.id);if(this.validateRecipient(e,i)){this.$nextTick(()=>{this.$refs.recipientsGrid.currentInlineEditId=e.id,this.$refs.recipientsGrid.enableInlineEdit()});return}e.isNew&&(this.addRecipient(),this.recipients[i].isNew=!1),this.resetError()},saveProfileField(e){const i=this.profileFields.findIndex(t=>t.id===e.id);if(this.validateProfileField(e,i)){this.$nextTick().then(()=>{const t=this.$refs.profileFieldsGrid;t&&(t.currentInlineEditId=e.id,t.enableInlineEdit())});return}e.isNew&&(this.addProfileField(),this.profileFields[i].isNew=!1),this.resetError()},cancelSaveRecipient(e){if(e.isNew)e.name="",e.email="";else{const i=this.recipients.findIndex(t=>t.id===this.selectedRecipient.id);this.recipients[i]=this.selectedRecipient}this.resetError()},cancelSaveProfileField(e){if(e.isNew)e.fieldId="",e.fieldValue="";else{const i=this.profileFields.findIndex(t=>t.id===this.selectedProfileField.id);this.profileFields[i]=this.selectedProfileField}this.resetError()},onEditRecipient(e){const i=this.recipients.findIndex(t=>e.id===t.id);!e.name&&!e.email?(this.recipients[i]={...e,errorName:null},this.recipients[i]={...e,errorMail:null}):this.validateRecipient(e,i),this.$refs.recipientsGrid.currentInlineEditId=e.id,this.$refs.recipientsGrid.enableInlineEdit(),this.selectedRecipient={...e}},onDeleteRecipient(e){this.recipients.splice(e,1)},onEditProfileField(e){const i=this.profileFields.findIndex(t=>e.id===t.id);!e.fieldId&&!e.fieldValue?(this.profileFields[i]={...e,errorId:null},this.profileFields[i]={...e,errorValue:null}):this.validateProfileField(e,i),this.$refs.profileFieldsGrid.currentInlineEditId=e.id,this.$refs.profileFieldsGrid.enableInlineEdit(),this.selectedProfileField={...e}},onDeleteProfileField(e){this.profileFields.splice(e,1)},setNameError(e){return e?null:new a({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"})},setMailError(e){let i=null;return e||(i=new a({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"})),p(e)||(i=new a({code:"INVALID_MAIL"})),i},setIdError(e){let i=null;return e||(i=new a({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"})),/^\d+$/.test(e)||(i=new a({code:"INVALID_PROFILE_FIELD_ID",detail:this.$tc("listrakMailSendAction.profileFieldIdValueInvalid")})),i},setValueError(e){let i=null;return e||(i=new a({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"})),i},validateRecipient(e,i){const t=this.setNameError(e.name),l=this.setMailError(e.email);return this.recipients[i]={...e,errorName:t,errorMail:l},t||l},validateProfileField(e,i){const t=this.setIdError(e.fieldId),l=this.setValueError(e.fieldValue);return this.profileFields[i]={...e,errorId:t,errorValue:l},t||l},resetError(){this.recipientGridError=null,this.recipients.forEach(e=>{e.errorName=null,e.errorMail=null}),this.profileFieldsGridError=null,this.profileFields.forEach(e=>{e.errorId=null,e.errorValue=null}),this.transactionalMessageIdError=null},allowDeleteRecipient(e){return e!==this.recipients.length-1},allowDeleteProfileField(e){return e!==this.profileFields.length-1}}});const u=Shopware.Classes.ApiService;class M extends u{constructor(i,t,l="listrak/data-api"){super(i,t,l)}check(i){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/test`,i,{headers:t}).then(l=>u.handleResponse(l))}}const f=Shopware.Classes.ApiService;class T extends f{constructor(i,t,l="listrak/email-api"){super(i,t,l)}check(i){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/test`,i,{headers:t}).then(l=>f.handleResponse(l))}}const F={buttonLabel:"API-Verbindung testen",title:"Datenintegrations-API-Test",success:"Die API-Verbindung war erfolgreich.",error:"Verbindung konnte nicht hergestellt werden. Bitte prÃ¼fen Sie Ihre Zugangsdaten."},D={buttonLabel:"API-Verbindung testen",title:"E-Mail-Integrations-API-Test",success:"Die API-Verbindung war erfolgreich.",error:"Verbindung konnte nicht hergestellt werden. Bitte prÃ¼fen Sie Ihre Zugangsdaten."},C={mailSend:"E-Mail verschicken",columnRecipientName:"EmpfÃ¤nger-Name",columnRecipientMail:"EmpfÃ¤nger-E-Mail-Adresse",placeholderRecipientEmailAddress:"E-Mail-Adresse eingeben ...",placeholderRecipientName:"Namen eingeben ...",fieldMailTemplateDetailLink:"E-Mail-Template Ã¶ffnen",titleSendMail:"E-Mail senden mit Listrak",labelEmailTemplate:"Template",placeholderEmailTemplate:"E-Mail-Template auswÃ¤hlen ...",titleNewEmailTemplate:"Neues E-Mail-Template",tabGeneral:"Allgemein",tabMailText:"Mail-Text",labelMailType:"Typ",placeholderMailType:"Typ auswÃ¤hlen ...",labelSubject:"Betreff",labelSenderName:"Absender",placeholderSubject:"Thema eingeben ...",placeholderSenderName:"Absendernamen eingeben ...",labelDescription:"Beschreibung",placeholderDescription:"Beschreibung eingeben ...",labelContentPlain:"Klartext",labelContentHtml:"HTML",placeholderPlain:"Klartext-Inhalte eingeben ...",placeholderHtml:"HTML-Inhalte eingeben ...",buttonAddMailTemplate:"E-Mail-Template hinzufÃ¼gen",labelDefault:"Standard",labelCustomer:"Kunde",labelAdmin:"Administrator",labelCustom:"Benutzerdefiniert",labelContactFormMail:"Anfragesteller",labelRecipient:"EmpfÃ¤nger",placeholderRecipient:"E-Mail-EmpfÃ¤nger auswÃ¤hlen ...",useDifferentReplyToLabel:"Absender",labelReplyTo:"Benutzerdefinierte Absender-Adresse",placeholderReplyTo:"E-Mail-Adresse eingeben ...",tooltipDifferentReplyTo:'E-Mails werden standardmÃ¤ÃŸig von der E-Mail-Adresse des Shop-Betreibers versendet. Du kannst die E-Mail-Adresse des Shop-Betreibers in den <a href="{settingsLink}">Einstellungen</a> Ã¤ndern.',labelLatestDocuments:"AnhÃ¤nge",placeholderLatestDocuments:"Dokumente auswÃ¤hlen ...",documentDescription:"Wenn die hier ausgewÃ¤hlten Dokumente nicht existieren, kÃ¶nnen sie nicht angehÃ¤ngt und versendet werden. Stelle sicher, dass die Dokumente durch eine vorhergehende Aktion erstellt wurden, bevor diese Aktion ausgefÃ¼hrt wird.",transactionalMessageIdLabel:"Transaktionsnachrichten-ID",transactionalMessageIdHelpText:"Gehen Sie in Listrak Admin zu Hilfe und Support > API-ID-Informationen, um die Transaktionsnachrichten-ID zu finden.",profileFieldsLabel:"Zuordnung von Listrak-Profilfeldern",profileFieldsFormatInvalid:"Bitte geben Sie ein gÃ¼ltiges Format fÃ¼r die Profilfelder ein.",transactionalMessageIdValueInvalid:"Bitte geben Sie einen gÃ¼ltigen Wert fÃ¼r die Transaktionsnachrichten-ID ein.",profileFieldIdValueInvalid:"Bitte geben Sie einen gÃ¼ltigen Wert fÃ¼r die Profilfeld-ID ein.",columnProfileFieldId:"Feld-ID",columnProfileFieldValue:"Feldwert"},R={dataApiTest:F,emailApiTest:D,listrakMailSendAction:C},$={buttonLabel:"Test API connection",title:"Data Integration API Test",success:"The API connection was successful.",error:"Could not connect. Please check your credentials."},x={buttonLabel:"Test API connection",title:"Email Integration API Test",success:"The API connection was successful.",error:"Could not connect. Please check your credentials."},P={mailSend:"Send email",columnRecipientName:"Recipient name",columnRecipientMail:"Recipient email address",placeholderRecipientEmailAddress:"Enter email address...",placeholderRecipientName:"Enter name...",fieldMailTemplateDetailLink:"Open email template",titleSendMail:"Send email with Listrak",labelEmailTemplate:"Template",placeholderEmailTemplate:"Select email template...",titleNewEmailTemplate:"New email template",tabGeneral:"General",tabMailText:"Mail text",labelMailType:"Type",placeholderMailType:"Select a type...",labelSubject:"Subject",labelSenderName:"Sender name",placeholderSubject:"Enter subject...",placeholderSenderName:"Enter sender name ...",labelDescription:"Description",placeholderDescription:"Enter description...",labelContentPlain:"Plain text",labelContentHtml:"HTML",placeholderPlain:"Enter email template plain text...",placeholderHtml:"Enter email template HTML text...",buttonAddMailTemplate:"Add email template",labelDefault:"Default",labelCustomer:"Customer",labelAdmin:"Admin",labelCustom:"Custom",labelContactFormMail:"Inquirer",labelRecipient:"Recipient",placeholderRecipient:"Select email recipient...",useDifferentReplyToLabel:"Sender",labelReplyTo:"Custom sender address",placeholderReplyTo:"Enter email address...",tooltipDifferentReplyTo:'Emails are sent from the shop ownerâ€™s email address by default. You can edit the shop ownerâ€™s email address in the <a href="{settingsLink}">settings</a>.',labelLatestDocuments:"Attachments",placeholderLatestDocuments:"Select documents...",documentDescription:"If the selected documents do not exist, they cannot be attached and sent. Make sure documents are generated by a preceding action before this action is executed.",transactionalMessageIdLabel:"Transactional Message ID",transactionalMessageIdHelpText:"In Listrak Admin go to Help & Support > API ID Information to find the Transactional Message ID.",profileFieldsLabel:"Listrak Profile Fields' Mapping",profileFieldsFormatInvalid:"Please enter a valid format for the profile fields.",transactionalMessageIdValueInvalid:"Please enter a valid value for the Transactional Message ID.",profileFieldIdValueInvalid:"Please enter a valid value for the Profile Field ID.",columnProfileFieldId:"Field ID",columnProfileFieldValue:"Field Value"},L={dataApiTest:$,emailApiTest:x,listrakMailSendAction:P};Shopware.Service().register("dataApiTest",()=>new M(Shopware.Application.getContainer("init").httpClient,Shopware.Service("loginService")));Shopware.Service().register("emailApiTest",()=>new T(Shopware.Application.getContainer("init").httpClient,Shopware.Service("loginService")));Shopware.Locale.extend("de-DE",R);Shopware.Locale.extend("en-GB",L);
//# sourceMappingURL=listrak-B7gKJtKZ.js.map
